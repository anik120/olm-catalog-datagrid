---
image: registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:e604315b9e87ac692da59b9355f58b58bd5c09c813d5c32fbf97b9f65ef15a3c
name: datagrid-operator.v8.2.4
package: datagrid
properties:
- type: olm.gvk
  value:
    group: infinispan.org
    kind: Backup
    version: v2alpha1
- type: olm.gvk
  value:
    group: infinispan.org
    kind: Batch
    version: v2alpha1
- type: olm.gvk
  value:
    group: infinispan.org
    kind: Cache
    version: v2alpha1
- type: olm.gvk
  value:
    group: infinispan.org
    kind: Infinispan
    version: v1
- type: olm.gvk
  value:
    group: infinispan.org
    kind: Restore
    version: v2alpha1
- type: olm.package
  value:
    packageName: datagrid
    version: 8.2.4
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7Im5hbWUiOiJpbmZpbmlzcGFuLW9wZXJhdG9yIn0sIm5hbWUiOiJiYWNrdXBzLmluZmluaXNwYW4ub3JnIn0sInNwZWMiOnsiZ3JvdXAiOiJpbmZpbmlzcGFuLm9yZyIsIm5hbWVzIjp7ImtpbmQiOiJCYWNrdXAiLCJsaXN0S2luZCI6IkJhY2t1cExpc3QiLCJwbHVyYWwiOiJiYWNrdXBzIiwic2luZ3VsYXIiOiJiYWNrdXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7Im5hbWUiOiJ2MmFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJCYWNrdXAgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGJhY2t1cHMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJCYWNrdXBTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgQmFja3VwIiwicHJvcGVydGllcyI6eyJjbHVzdGVyIjp7InR5cGUiOiJzdHJpbmcifSwiY29udGFpbmVyIjp7ImRlc2NyaXB0aW9uIjoiSW5maW5pc3BhbkNvbnRhaW5lclNwZWMgc3BlY2lmeSByZXNvdXJjZSByZXF1aXJlbWVudHMgcGVyIGNvbnRhaW5lciIsInByb3BlcnRpZXMiOnsiY3B1Ijp7InR5cGUiOiJzdHJpbmcifSwiZXh0cmFKdm1PcHRzIjp7InR5cGUiOiJzdHJpbmcifSwibWVtb3J5Ijp7InR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwicmVzb3VyY2VzIjp7InByb3BlcnRpZXMiOnsiY2FjaGVDb25maWdzIjp7ImRlc2NyaXB0aW9uIjoiRGVwcmVjYXRlZCBhbmQgdG8gYmUgcmVtb3ZlZCBvbiBzdWJzZXF1ZW50IHJlbGVhc2UuIFVzZSAuVGVtcGxhdGVzIGluc3RlYWQuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwiY2FjaGVzIjp7Iml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sImNvdW50ZXJzIjp7Iml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sInByb3RvU2NoZW1hcyI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJzY3JpcHRzIjp7ImRlc2NyaXB0aW9uIjoiRGVwcmVjYXRlZCBhbmQgdG8gYmUgcmVtb3ZlZCBvbiBzdWJzZXF1ZW50IHJlbGVhc2UuIFVzZSAuVGFza3MgaW5zdGVhZC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJ0YXNrcyI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJ0ZW1wbGF0ZXMiOnsiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifX0sInR5cGUiOiJvYmplY3QifSwidm9sdW1lIjp7InByb3BlcnRpZXMiOnsic3RvcmFnZSI6eyJ0eXBlIjoic3RyaW5nIn0sInN0b3JhZ2VDbGFzc05hbWUiOnsidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsiY2x1c3RlciJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IkJhY2t1cFN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBCYWNrdXAiLCJwcm9wZXJ0aWVzIjp7InBoYXNlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGUgaW5kaWNhdGVzIHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoZSBiYWNrdXAgb3BlcmF0aW9uIiwidHlwZSI6InN0cmluZyJ9LCJwdmMiOnsiZGVzY3JpcHRpb24iOiJUaGUgbmFtZSBvZiB0aGUgY3JlYXRlZCBQZXJzaXN0ZW50Vm9sdW1lQ2xhaW0gdXNlZCB0byBzdG9yZSB0aGUgYmFja3VwIiwidHlwZSI6InN0cmluZyJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiJSZWFzb24gaW5kaWNhdGVzIHRoZSByZWFzb24gZm9yIGFueSBiYWNrdXAgcmVsYXRlZCBmYWlsdXJlcy4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJwaGFzZSJdLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7Im5hbWUiOiJpbmZpbmlzcGFuLW9wZXJhdG9yIn0sIm5hbWUiOiJiYXRjaGVzLmluZmluaXNwYW4ub3JnIn0sInNwZWMiOnsiZ3JvdXAiOiJpbmZpbmlzcGFuLm9yZyIsIm5hbWVzIjp7ImtpbmQiOiJCYXRjaCIsImxpc3RLaW5kIjoiQmF0Y2hMaXN0IiwicGx1cmFsIjoiYmF0Y2hlcyIsInNpbmd1bGFyIjoiYmF0Y2gifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7Im5hbWUiOiJ2MmFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJCYXRjaCBpcyB0aGUgU2NoZW1hIGZvciB0aGUgYmF0Y2hlcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkJhdGNoU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIEJhdGNoIiwicHJvcGVydGllcyI6eyJjbHVzdGVyIjp7InR5cGUiOiJzdHJpbmcifSwiY29uZmlnIjp7InR5cGUiOiJzdHJpbmcifSwiY29uZmlnTWFwIjp7InR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImNsdXN0ZXIiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJCYXRjaFN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBCYXRjaCIsInByb3BlcnRpZXMiOnsiY2x1c3RlclVJRCI6eyJkZXNjcmlwdGlvbiI6IlRoZSBVVUlEIG9mIHRoZSBJbmZpbmlzcGFuIGluc3RhbmNlIHRoYXQgdGhlIEJhdGNoIGlzIGFzc29jaWF0ZWQgd2l0aCIsInR5cGUiOiJzdHJpbmcifSwicGhhc2UiOnsiZGVzY3JpcHRpb24iOiJTdGF0ZSBpbmRpY2F0ZXMgdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIGJhdGNoIG9wZXJhdGlvbiIsInR5cGUiOiJzdHJpbmcifSwicmVhc29uIjp7ImRlc2NyaXB0aW9uIjoiUmVhc29uIGluZGljYXRlcyB0aGUgcmVhc29uIGZvciBhbnkgYmF0Y2ggcmVsYXRlZCBmYWlsdXJlcy4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJwaGFzZSJdLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7Im5hbWUiOiJpbmZpbmlzcGFuLW9wZXJhdG9yIn0sIm5hbWUiOiJjYWNoZXMuaW5maW5pc3Bhbi5vcmcifSwic3BlYyI6eyJncm91cCI6ImluZmluaXNwYW4ub3JnIiwibmFtZXMiOnsia2luZCI6IkNhY2hlIiwibGlzdEtpbmQiOiJDYWNoZUxpc3QiLCJwbHVyYWwiOiJjYWNoZXMiLCJzaW5ndWxhciI6ImNhY2hlIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjJhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiQ2FjaGUgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGNhY2hlcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkNhY2hlU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIENhY2hlIiwicHJvcGVydGllcyI6eyJhZG1pbkF1dGgiOnsiZGVzY3JpcHRpb24iOiJEZXByZWNhdGVkLiBUaGlzIG5vIGxvbmdlciBoYXMgYW55IGVmZmVjdC4gVGhlIG9wZXJhdG9yJ3MgYWRtaW4gY3JlZGVudGlhbHMgYXJlIG5vdyB1c2VkIHRvIHBlcmZvcm0gY2FjaGUgb3BlcmF0aW9ucyIsInByb3BlcnRpZXMiOnsicGFzc3dvcmQiOnsiZGVzY3JpcHRpb24iOiJTZWNyZXQgYW5kIGtleSBjb250YWluaW5nIHRoZSBhZG1pbiBwYXNzd29yZCBmb3IgYXV0aGVudGljYXRpb24uIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJUaGUga2V5IG9mIHRoZSBzZWNyZXQgdG8gc2VsZWN0IGZyb20uICBNdXN0IGJlIGEgdmFsaWQgc2VjcmV0IGtleS4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZWZlcmVudC4gTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9vdmVydmlldy93b3JraW5nLXdpdGgtb2JqZWN0cy9uYW1lcy8jbmFtZXMgVE9ETzogQWRkIG90aGVyIHVzZWZ1bCBmaWVsZHMuIGFwaVZlcnNpb24sIGtpbmQsIHVpZD8iLCJ0eXBlIjoic3RyaW5nIn0sIm9wdGlvbmFsIjp7ImRlc2NyaXB0aW9uIjoiU3BlY2lmeSB3aGV0aGVyIHRoZSBTZWNyZXQgb3IgaXRzIGtleSBtdXN0IGJlIGRlZmluZWQiLCJ0eXBlIjoiYm9vbGVhbiJ9fSwicmVxdWlyZWQiOlsia2V5Il0sInR5cGUiOiJvYmplY3QifSwic2VjcmV0TmFtZSI6eyJkZXNjcmlwdGlvbiI6Im5hbWUgb2YgdGhlIHNlY3JldCBjb250YWluaW5nIGJvdGggYWRtaW4gdXNlcm5hbWUgYW5kIHBhc3N3b3JkIiwidHlwZSI6InN0cmluZyJ9LCJ1c2VybmFtZSI6eyJkZXNjcmlwdGlvbiI6IlNlY3JldCBhbmQga2V5IGNvbnRhaW5pbmcgdGhlIGFkbWluIHVzZXJuYW1lIGZvciBhdXRoZW50aWNhdGlvbi4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBrZXkgb2YgdGhlIHNlY3JldCB0byBzZWxlY3QgZnJvbS4gIE11c3QgYmUgYSB2YWxpZCBzZWNyZXQga2V5LiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHJlZmVyZW50LiBNb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL292ZXJ2aWV3L3dvcmtpbmctd2l0aC1vYmplY3RzL25hbWVzLyNuYW1lcyBUT0RPOiBBZGQgb3RoZXIgdXNlZnVsIGZpZWxkcy4gYXBpVmVyc2lvbiwga2luZCwgdWlkPyIsInR5cGUiOiJzdHJpbmcifSwib3B0aW9uYWwiOnsiZGVzY3JpcHRpb24iOiJTcGVjaWZ5IHdoZXRoZXIgdGhlIFNlY3JldCBvciBpdHMga2V5IG11c3QgYmUgZGVmaW5lZCIsInR5cGUiOiJib29sZWFuIn19LCJyZXF1aXJlZCI6WyJrZXkiXSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJjbHVzdGVyTmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGNsdXN0ZXIgd2hlcmUgdG8gY3JlYXRlIHRoZSBjYWNoZSIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGNhY2hlIHRvIGJlIGNyZWF0ZWQuIElmIGVtcHR5IE9iamVjdE1ldGEuTmFtZSB3aWxsIGJlIHVzZWQiLCJ0eXBlIjoic3RyaW5nIn0sInRlbXBsYXRlIjp7ImRlc2NyaXB0aW9uIjoiQ2FjaGUgdGVtcGxhdGUgaW4gWE1MIGZvcm1hdCIsInR5cGUiOiJzdHJpbmcifSwidGVtcGxhdGVOYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgdGVtcGxhdGUgdG8gYmUgdXNlZCB0byBjcmVhdGUgdGhpcyBjYWNoZSIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImNsdXN0ZXJOYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiQ2FjaGVTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgQ2FjaGUiLCJwcm9wZXJ0aWVzIjp7ImNvbmRpdGlvbnMiOnsiZGVzY3JpcHRpb24iOiJDb25kaXRpb25zIGxpc3QgZm9yIHRoaXMgY2FjaGUiLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkNhY2hlQ29uZGl0aW9uIGRlZmluZSBhIGNvbmRpdGlvbiBvZiB0aGUgY2x1c3RlciIsInByb3BlcnRpZXMiOnsibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Ikh1bWFuLXJlYWRhYmxlIG1lc3NhZ2UgaW5kaWNhdGluZyBkZXRhaWxzIGFib3V0IGxhc3QgdHJhbnNpdGlvbi4iLCJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlN0YXR1cyBpcyB0aGUgc3RhdHVzIG9mIHRoZSBjb25kaXRpb24uIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBpcyB0aGUgdHlwZSBvZiB0aGUgY29uZGl0aW9uLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInN0YXR1cyIsInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwic2VydmljZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJTZXJ2aWNlIG5hbWUgdGhhdCBleHBvc2VzIHRoZSBjYWNoZSBpbnNpZGUgdGhlIGNsdXN0ZXIiLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7Im5hbWUiOiJpbmZpbmlzcGFuLW9wZXJhdG9yIn0sIm5hbWUiOiJyZXN0b3Jlcy5pbmZpbmlzcGFuLm9yZyJ9LCJzcGVjIjp7Imdyb3VwIjoiaW5maW5pc3Bhbi5vcmciLCJuYW1lcyI6eyJraW5kIjoiUmVzdG9yZSIsImxpc3RLaW5kIjoiUmVzdG9yZUxpc3QiLCJwbHVyYWwiOiJyZXN0b3JlcyIsInNpbmd1bGFyIjoicmVzdG9yZSJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYyYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlJlc3RvcmUgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIHJlc3RvcmVzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiQmFja3VwU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIEJhY2t1cCIsInByb3BlcnRpZXMiOnsiYmFja3VwIjp7InR5cGUiOiJzdHJpbmcifSwiY2x1c3RlciI6eyJ0eXBlIjoic3RyaW5nIn0sImNvbnRhaW5lciI6eyJkZXNjcmlwdGlvbiI6IkluZmluaXNwYW5Db250YWluZXJTcGVjIHNwZWNpZnkgcmVzb3VyY2UgcmVxdWlyZW1lbnRzIHBlciBjb250YWluZXIiLCJwcm9wZXJ0aWVzIjp7ImNwdSI6eyJ0eXBlIjoic3RyaW5nIn0sImV4dHJhSnZtT3B0cyI6eyJ0eXBlIjoic3RyaW5nIn0sIm1lbW9yeSI6eyJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInJlc291cmNlcyI6eyJwcm9wZXJ0aWVzIjp7ImNhY2hlQ29uZmlncyI6eyJkZXNjcmlwdGlvbiI6IkRlcHJlY2F0ZWQgYW5kIHRvIGJlIHJlbW92ZWQgb24gc3Vic2VxdWVudCByZWxlYXNlLiBVc2UgLlRlbXBsYXRlcyBpbnN0ZWFkLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sImNhY2hlcyI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJjb3VudGVycyI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJwcm90b1NjaGVtYXMiOnsiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwic2NyaXB0cyI6eyJkZXNjcmlwdGlvbiI6IkRlcHJlY2F0ZWQgYW5kIHRvIGJlIHJlbW92ZWQgb24gc3Vic2VxdWVudCByZWxlYXNlLiBVc2UgLlRhc2tzIGluc3RlYWQuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwidGFza3MiOnsiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwidGVtcGxhdGVzIjp7Iml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJiYWNrdXAiLCJjbHVzdGVyIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiUmVzdG9yZVN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBSZXN0b3JlIiwicHJvcGVydGllcyI6eyJwaGFzZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRlIGluZGljYXRlcyB0aGUgY3VycmVudCBzdGF0ZSBvZiB0aGUgcmVzdG9yZSBvcGVyYXRpb24iLCJ0eXBlIjoic3RyaW5nIn0sInJlYXNvbiI6eyJkZXNjcmlwdGlvbiI6IlJlYXNvbiBpbmRpY2F0ZXMgdGhlIHJlYXNvbiBmb3IgYW55IFJlc3RvcmUgcmVsYXRlZCBmYWlsdXJlcy4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJwaGFzZSJdLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfX0=
relatedImages:
- image: registry.redhat.io/datagrid/datagrid-8-openj9-11-rhel8@sha256:979c66922f1ca37559f3e48668cd4c3dbbf3a124cc491d59170d00d79546dd8e
  name: openj9
- image: registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:e604315b9e87ac692da59b9355f58b58bd5c09c813d5c32fbf97b9f65ef15a3c
  name: ""
- image: registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:1435aa60e8ab4d25c86daae68dcb93d14999f50d7c1e11a3c5726a86d3d30453
  name: datagrid-8-rhel8-operator-1435aa60e8ab4d25c86daae68dcb93d14999f50d7c1e11a3c5726a86d3d30453-annotation
- image: registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:1435aa60e8ab4d25c86daae68dcb93d14999f50d7c1e11a3c5726a86d3d30453
  name: infinispan-operator
- image: registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:e4f1862e798442a905a9b70bc5db7d9603f040d0f938d32cb137e4274487b6ed
  name: openjdk
schema: olm.bundle
