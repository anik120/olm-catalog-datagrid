---
image: registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:517964e827e483f7bd2af4ed60bd23356f4a5d296b1401a14fac03ba7ec8619b
name: datagrid-operator.v8.2.3
package: datagrid
properties:
- type: olm.deprecated
  value: {}
- type: olm.gvk
  value:
    group: infinispan.org
    kind: Backup
    version: v2alpha1
- type: olm.gvk
  value:
    group: infinispan.org
    kind: Batch
    version: v2alpha1
- type: olm.gvk
  value:
    group: infinispan.org
    kind: Cache
    version: v2alpha1
- type: olm.gvk
  value:
    group: infinispan.org
    kind: Infinispan
    version: v1
- type: olm.gvk
  value:
    group: infinispan.org
    kind: Restore
    version: v2alpha1
- type: olm.package
  value:
    packageName: datagrid
    version: 8.2.3
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjFiZXRhMSIsImtpbmQiOiJDdXN0b21SZXNvdXJjZURlZmluaXRpb24iLCJtZXRhZGF0YSI6eyJsYWJlbHMiOnsibmFtZSI6ImluZmluaXNwYW4tb3BlcmF0b3IifSwibmFtZSI6ImJhY2t1cHMuaW5maW5pc3Bhbi5vcmcifSwic3BlYyI6eyJncm91cCI6ImluZmluaXNwYW4ub3JnIiwibmFtZXMiOnsia2luZCI6IkJhY2t1cCIsImxpc3RLaW5kIjoiQmFja3VwTGlzdCIsInBsdXJhbCI6ImJhY2t1cHMiLCJzaW5ndWxhciI6ImJhY2t1cCJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX0sInZhbGlkYXRpb24iOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiQmFja3VwIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBiYWNrdXBzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiQmFja3VwU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIEJhY2t1cCIsInByb3BlcnRpZXMiOnsiY2x1c3RlciI6eyJ0eXBlIjoic3RyaW5nIn0sImNvbnRhaW5lciI6eyJkZXNjcmlwdGlvbiI6IkluZmluaXNwYW5Db250YWluZXJTcGVjIHNwZWNpZnkgcmVzb3VyY2UgcmVxdWlyZW1lbnRzIHBlciBjb250YWluZXIiLCJwcm9wZXJ0aWVzIjp7ImNwdSI6eyJ0eXBlIjoic3RyaW5nIn0sImV4dHJhSnZtT3B0cyI6eyJ0eXBlIjoic3RyaW5nIn0sIm1lbW9yeSI6eyJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInJlc291cmNlcyI6eyJwcm9wZXJ0aWVzIjp7ImNhY2hlQ29uZmlncyI6eyJkZXNjcmlwdGlvbiI6IkRlcHJlY2F0ZWQgYW5kIHRvIGJlIHJlbW92ZWQgb24gc3Vic2VxdWVudCByZWxlYXNlLiBVc2UgLlRlbXBsYXRlcyBpbnN0ZWFkLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sImNhY2hlcyI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJjb3VudGVycyI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJwcm90b1NjaGVtYXMiOnsiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwic2NyaXB0cyI6eyJkZXNjcmlwdGlvbiI6IkRlcHJlY2F0ZWQgYW5kIHRvIGJlIHJlbW92ZWQgb24gc3Vic2VxdWVudCByZWxlYXNlLiBVc2UgLlRhc2tzIGluc3RlYWQuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwidGFza3MiOnsiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwidGVtcGxhdGVzIjp7Iml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In0sInZvbHVtZSI6eyJwcm9wZXJ0aWVzIjp7InN0b3JhZ2UiOnsidHlwZSI6InN0cmluZyJ9LCJzdG9yYWdlQ2xhc3NOYW1lIjp7InR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbImNsdXN0ZXIiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJCYWNrdXBTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgQmFja3VwIiwicHJvcGVydGllcyI6eyJwaGFzZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRlIGluZGljYXRlcyB0aGUgY3VycmVudCBzdGF0ZSBvZiB0aGUgYmFja3VwIG9wZXJhdGlvbiIsInR5cGUiOiJzdHJpbmcifSwicHZjIjp7ImRlc2NyaXB0aW9uIjoiVGhlIG5hbWUgb2YgdGhlIGNyZWF0ZWQgUGVyc2lzdGVudFZvbHVtZUNsYWltIHVzZWQgdG8gc3RvcmUgdGhlIGJhY2t1cCIsInR5cGUiOiJzdHJpbmcifSwicmVhc29uIjp7ImRlc2NyaXB0aW9uIjoiUmVhc29uIGluZGljYXRlcyB0aGUgcmVhc29uIGZvciBhbnkgYmFja3VwIHJlbGF0ZWQgZmFpbHVyZXMuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsicGhhc2UiXSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidmVyc2lvbiI6InYyYWxwaGExIiwidmVyc2lvbnMiOlt7Im5hbWUiOiJ2MmFscGhhMSIsInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZX1dfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjFiZXRhMSIsImtpbmQiOiJDdXN0b21SZXNvdXJjZURlZmluaXRpb24iLCJtZXRhZGF0YSI6eyJsYWJlbHMiOnsibmFtZSI6ImluZmluaXNwYW4tb3BlcmF0b3IifSwibmFtZSI6ImJhdGNoZXMuaW5maW5pc3Bhbi5vcmcifSwic3BlYyI6eyJncm91cCI6ImluZmluaXNwYW4ub3JnIiwibmFtZXMiOnsia2luZCI6IkJhdGNoIiwibGlzdEtpbmQiOiJCYXRjaExpc3QiLCJwbHVyYWwiOiJiYXRjaGVzIiwic2luZ3VsYXIiOiJiYXRjaCJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX0sInZhbGlkYXRpb24iOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiQmF0Y2ggaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGJhdGNoZXMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJCYXRjaFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBCYXRjaCIsInByb3BlcnRpZXMiOnsiY2x1c3RlciI6eyJ0eXBlIjoic3RyaW5nIn0sImNvbmZpZyI6eyJ0eXBlIjoic3RyaW5nIn0sImNvbmZpZ01hcCI6eyJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJjbHVzdGVyIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiQmF0Y2hTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgQmF0Y2giLCJwcm9wZXJ0aWVzIjp7ImNsdXN0ZXJVSUQiOnsiZGVzY3JpcHRpb24iOiJUaGUgVVVJRCBvZiB0aGUgSW5maW5pc3BhbiBpbnN0YW5jZSB0aGF0IHRoZSBCYXRjaCBpcyBhc3NvY2lhdGVkIHdpdGgiLCJ0eXBlIjoic3RyaW5nIn0sInBoYXNlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGUgaW5kaWNhdGVzIHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoZSBiYXRjaCBvcGVyYXRpb24iLCJ0eXBlIjoic3RyaW5nIn0sInJlYXNvbiI6eyJkZXNjcmlwdGlvbiI6IlJlYXNvbiBpbmRpY2F0ZXMgdGhlIHJlYXNvbiBmb3IgYW55IGJhdGNoIHJlbGF0ZWQgZmFpbHVyZXMuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsicGhhc2UiXSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidmVyc2lvbiI6InYyYWxwaGExIiwidmVyc2lvbnMiOlt7Im5hbWUiOiJ2MmFscGhhMSIsInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZX1dfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjFiZXRhMSIsImtpbmQiOiJDdXN0b21SZXNvdXJjZURlZmluaXRpb24iLCJtZXRhZGF0YSI6eyJsYWJlbHMiOnsibmFtZSI6ImluZmluaXNwYW4tb3BlcmF0b3IifSwibmFtZSI6ImNhY2hlcy5pbmZpbmlzcGFuLm9yZyJ9LCJzcGVjIjp7Imdyb3VwIjoiaW5maW5pc3Bhbi5vcmciLCJuYW1lcyI6eyJraW5kIjoiQ2FjaGUiLCJsaXN0S2luZCI6IkNhY2hlTGlzdCIsInBsdXJhbCI6ImNhY2hlcyIsInNpbmd1bGFyIjoiY2FjaGUifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319LCJ2YWxpZGF0aW9uIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNhY2hlIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBjYWNoZXMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJDYWNoZVNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBDYWNoZSIsInByb3BlcnRpZXMiOnsiYWRtaW5BdXRoIjp7ImRlc2NyaXB0aW9uIjoiRGVwcmVjYXRlZC4gVGhpcyBubyBsb25nZXIgaGFzIGFueSBlZmZlY3QuIFRoZSBvcGVyYXRvcidzIGFkbWluIGNyZWRlbnRpYWxzIGFyZSBub3cgdXNlZCB0byBwZXJmb3JtIGNhY2hlIG9wZXJhdGlvbnMiLCJwcm9wZXJ0aWVzIjp7InBhc3N3b3JkIjp7ImRlc2NyaXB0aW9uIjoiU2VjcmV0IGFuZCBrZXkgY29udGFpbmluZyB0aGUgYWRtaW4gcGFzc3dvcmQgZm9yIGF1dGhlbnRpY2F0aW9uLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGtleSBvZiB0aGUgc2VjcmV0IHRvIHNlbGVjdCBmcm9tLiAgTXVzdCBiZSBhIHZhbGlkIHNlY3JldCBrZXkuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcmVmZXJlbnQuIE1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzIFRPRE86IEFkZCBvdGhlciB1c2VmdWwgZmllbGRzLiBhcGlWZXJzaW9uLCBraW5kLCB1aWQ/IiwidHlwZSI6InN0cmluZyJ9LCJvcHRpb25hbCI6eyJkZXNjcmlwdGlvbiI6IlNwZWNpZnkgd2hldGhlciB0aGUgU2VjcmV0IG9yIGl0cyBrZXkgbXVzdCBiZSBkZWZpbmVkIiwidHlwZSI6ImJvb2xlYW4ifX0sInJlcXVpcmVkIjpbImtleSJdLCJ0eXBlIjoib2JqZWN0In0sInNlY3JldE5hbWUiOnsiZGVzY3JpcHRpb24iOiJuYW1lIG9mIHRoZSBzZWNyZXQgY29udGFpbmluZyBib3RoIGFkbWluIHVzZXJuYW1lIGFuZCBwYXNzd29yZCIsInR5cGUiOiJzdHJpbmcifSwidXNlcm5hbWUiOnsiZGVzY3JpcHRpb24iOiJTZWNyZXQgYW5kIGtleSBjb250YWluaW5nIHRoZSBhZG1pbiB1c2VybmFtZSBmb3IgYXV0aGVudGljYXRpb24uIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJUaGUga2V5IG9mIHRoZSBzZWNyZXQgdG8gc2VsZWN0IGZyb20uICBNdXN0IGJlIGEgdmFsaWQgc2VjcmV0IGtleS4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZWZlcmVudC4gTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9vdmVydmlldy93b3JraW5nLXdpdGgtb2JqZWN0cy9uYW1lcy8jbmFtZXMgVE9ETzogQWRkIG90aGVyIHVzZWZ1bCBmaWVsZHMuIGFwaVZlcnNpb24sIGtpbmQsIHVpZD8iLCJ0eXBlIjoic3RyaW5nIn0sIm9wdGlvbmFsIjp7ImRlc2NyaXB0aW9uIjoiU3BlY2lmeSB3aGV0aGVyIHRoZSBTZWNyZXQgb3IgaXRzIGtleSBtdXN0IGJlIGRlZmluZWQiLCJ0eXBlIjoiYm9vbGVhbiJ9fSwicmVxdWlyZWQiOlsia2V5Il0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifSwiY2x1c3Rlck5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBjbHVzdGVyIHdoZXJlIHRvIGNyZWF0ZSB0aGUgY2FjaGUiLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBjYWNoZSB0byBiZSBjcmVhdGVkLiBJZiBlbXB0eSBPYmplY3RNZXRhLk5hbWUgd2lsbCBiZSB1c2VkIiwidHlwZSI6InN0cmluZyJ9LCJ0ZW1wbGF0ZSI6eyJkZXNjcmlwdGlvbiI6IkNhY2hlIHRlbXBsYXRlIGluIFhNTCBmb3JtYXQiLCJ0eXBlIjoic3RyaW5nIn0sInRlbXBsYXRlTmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHRlbXBsYXRlIHRvIGJlIHVzZWQgdG8gY3JlYXRlIHRoaXMgY2FjaGUiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJjbHVzdGVyTmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IkNhY2hlU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIENhY2hlIiwicHJvcGVydGllcyI6eyJjb25kaXRpb25zIjp7ImRlc2NyaXB0aW9uIjoiQ29uZGl0aW9ucyBsaXN0IGZvciB0aGlzIGNhY2hlIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJDYWNoZUNvbmRpdGlvbiBkZWZpbmUgYSBjb25kaXRpb24gb2YgdGhlIGNsdXN0ZXIiLCJwcm9wZXJ0aWVzIjp7Im1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJIdW1hbi1yZWFkYWJsZSBtZXNzYWdlIGluZGljYXRpbmcgZGV0YWlscyBhYm91dCBsYXN0IHRyYW5zaXRpb24uIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTdGF0dXMgaXMgdGhlIHN0YXR1cyBvZiB0aGUgY29uZGl0aW9uLiIsInR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6IlR5cGUgaXMgdGhlIHR5cGUgb2YgdGhlIGNvbmRpdGlvbi4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJzdGF0dXMiLCJ0eXBlIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sInNlcnZpY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiU2VydmljZSBuYW1lIHRoYXQgZXhwb3NlcyB0aGUgY2FjaGUgaW5zaWRlIHRoZSBjbHVzdGVyIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidmVyc2lvbiI6InYyYWxwaGExIiwidmVyc2lvbnMiOlt7Im5hbWUiOiJ2MmFscGhhMSIsInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZX1dfX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjFiZXRhMSIsImtpbmQiOiJDdXN0b21SZXNvdXJjZURlZmluaXRpb24iLCJtZXRhZGF0YSI6eyJsYWJlbHMiOnsibmFtZSI6ImluZmluaXNwYW4tb3BlcmF0b3IifSwibmFtZSI6InJlc3RvcmVzLmluZmluaXNwYW4ub3JnIn0sInNwZWMiOnsiZ3JvdXAiOiJpbmZpbmlzcGFuLm9yZyIsIm5hbWVzIjp7ImtpbmQiOiJSZXN0b3JlIiwibGlzdEtpbmQiOiJSZXN0b3JlTGlzdCIsInBsdXJhbCI6InJlc3RvcmVzIiwic2luZ3VsYXIiOiJyZXN0b3JlIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fSwidmFsaWRhdGlvbiI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJSZXN0b3JlIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSByZXN0b3JlcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkJhY2t1cFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBCYWNrdXAiLCJwcm9wZXJ0aWVzIjp7ImJhY2t1cCI6eyJ0eXBlIjoic3RyaW5nIn0sImNsdXN0ZXIiOnsidHlwZSI6InN0cmluZyJ9LCJjb250YWluZXIiOnsiZGVzY3JpcHRpb24iOiJJbmZpbmlzcGFuQ29udGFpbmVyU3BlYyBzcGVjaWZ5IHJlc291cmNlIHJlcXVpcmVtZW50cyBwZXIgY29udGFpbmVyIiwicHJvcGVydGllcyI6eyJjcHUiOnsidHlwZSI6InN0cmluZyJ9LCJleHRyYUp2bU9wdHMiOnsidHlwZSI6InN0cmluZyJ9LCJtZW1vcnkiOnsidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJyZXNvdXJjZXMiOnsicHJvcGVydGllcyI6eyJjYWNoZUNvbmZpZ3MiOnsiZGVzY3JpcHRpb24iOiJEZXByZWNhdGVkIGFuZCB0byBiZSByZW1vdmVkIG9uIHN1YnNlcXVlbnQgcmVsZWFzZS4gVXNlIC5UZW1wbGF0ZXMgaW5zdGVhZC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJjYWNoZXMiOnsiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwiY291bnRlcnMiOnsiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwicHJvdG9TY2hlbWFzIjp7Iml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sInNjcmlwdHMiOnsiZGVzY3JpcHRpb24iOiJEZXByZWNhdGVkIGFuZCB0byBiZSByZW1vdmVkIG9uIHN1YnNlcXVlbnQgcmVsZWFzZS4gVXNlIC5UYXNrcyBpbnN0ZWFkLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sInRhc2tzIjp7Iml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sInRlbXBsYXRlcyI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsiYmFja3VwIiwiY2x1c3RlciJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlJlc3RvcmVTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgUmVzdG9yZSIsInByb3BlcnRpZXMiOnsicGhhc2UiOnsiZGVzY3JpcHRpb24iOiJTdGF0ZSBpbmRpY2F0ZXMgdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIHJlc3RvcmUgb3BlcmF0aW9uIiwidHlwZSI6InN0cmluZyJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiJSZWFzb24gaW5kaWNhdGVzIHRoZSByZWFzb24gZm9yIGFueSBSZXN0b3JlIHJlbGF0ZWQgZmFpbHVyZXMuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsicGhhc2UiXSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidmVyc2lvbiI6InYyYWxwaGExIiwidmVyc2lvbnMiOlt7Im5hbWUiOiJ2MmFscGhhMSIsInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZX1dfX0=
relatedImages:
- image: registry.redhat.io/datagrid/datagrid-8-openj9-11-rhel8@sha256:979c66922f1ca37559f3e48668cd4c3dbbf3a124cc491d59170d00d79546dd8e
  name: openj9
- image: registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:517964e827e483f7bd2af4ed60bd23356f4a5d296b1401a14fac03ba7ec8619b
  name: ""
- image: registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:1edde0e9441f7a7504aa04fc16deaa6c11aa39a5057e6bef419b0ff6285cd264
  name: datagrid-8-rhel8-operator-1edde0e9441f7a7504aa04fc16deaa6c11aa39a5057e6bef419b0ff6285cd264-annotation
- image: registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:1edde0e9441f7a7504aa04fc16deaa6c11aa39a5057e6bef419b0ff6285cd264
  name: infinispan-operator
- image: registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:e4f1862e798442a905a9b70bc5db7d9603f040d0f938d32cb137e4274487b6ed
  name: openjdk
schema: olm.bundle
